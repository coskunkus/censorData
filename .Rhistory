library(vignettes)
install.packages("knitr")
library(knitr)
usethis::use_vignette("MyVignette")
usethis::use_readme_rmd()
devtools::build_readme()
usethis::use_roxygen_md()
roxygen2md::roxygen2md()
install.packages("roxygen2md")
usethis::use_roxygen_md()
roxygen2md::roxygen2md()
pkgload::dev_help('censorData')
pkgload::dev_help('censorData')
rlang::last_trace()
rlang::last_trace(drop = FALSE)
pkgload::dev_help('censorData')
pkgload::dev_help('censorData')
pkgload::load_all()
pkgload::dev_help('censorData')
devtools::document()
pkgload::dev_help('censorData')
devtools::load_all()
pkgload::dev_help('censorData')
pkgload::dev_help('censorData')
pkgload::dev_help('censorData')
pcdata=function(m,r,qdistr="qunif",par=c(0,1))
{
x=NULL
y=NULL
n=m+sum(r)
x[1]=rexp(1)/n
for(i1 in 2:m){
x[i1]=x[i1-1]+rexp(1)/(n-sum(r[1:(i1-1)])-i1+1)
}
u=1-exp(-x)
f=paste0("y=",qdistr,"(u,par)")
eval(parse(text = f))
return(y)
}
pcdata(10,rep(1,10),"qweibull",c(2,3))
pkgload::dev_help('censorData')
install.packages("pkgbuild")
pkgload::dev_help('censorData')
usethis::use_news_md()
usethis::use_pkgdown()
usethis::use_vignette(“MyVignette”)
usethis::use_vignette(“Myvignette”)
usethis::use_vignette(“MyVignette”)
usethis::use_vignette(“MyVignette.R”)
usethis::use_testthat()
pcdata=function(m,r,qdistr="qunif",par=c(0,1))
{
if(any(m=r)) {stop("m r'ye eşit olamaz")}
x=NULL
y=NULL
n=m+sum(r)
x[1]=stats::rexp(1)/n
for(i1 in 2:m){
x[i1]=x[i1-1]+stats::rexp(1)/(n-sum(r[1:(i1-1)])-i1+1)
}
u=1-exp(-x)
f=paste0("y=",qdistr,"(u,par)")
eval(parse(text = f))
return(y)
}
pcdata(10,rep(1,10),"qweibull",c(2,3))
pcdata(9,rep(1,10),"qweibull",c(2,3))
pcdata=function(m,r,qdistr="qunif",par=c(0,1))
{
if(any(m=r)) {stop("r must be not even m")}
x=NULL
y=NULL
n=m+sum(r)
x[1]=stats::rexp(1)/n
for(i1 in 2:m){
x[i1]=x[i1-1]+stats::rexp(1)/(n-sum(r[1:(i1-1)])-i1+1)
}
u=1-exp(-x)
f=paste0("y=",qdistr,"(u,par)")
eval(parse(text = f))
return(y)
}
pcdata(10,rep(1,10),"qweibull",c(2,3))
pcdata=function(m,r,qdistr="qunif",par=c(0,1))
{
if(any(m!=length(r))) {stop("dimension of r must be equal to m")}
x=NULL
y=NULL
n=m+sum(r)
x[1]=stats::rexp(1)/n
for(i1 in 2:m){
x[i1]=x[i1-1]+stats::rexp(1)/(n-sum(r[1:(i1-1)])-i1+1)
}
u=1-exp(-x)
f=paste0("y=",qdistr,"(u,par)")
eval(parse(text = f))
return(y)
}
pcdata(10,rep(1,10),"qweibull",c(2,3))
pcdata(10,rep(1,9),"qweibull",c(2,3))
expect_type(pcdata(10,rep(1,10),"qweibull",c(1,2)), "double")
library(testthat) # load testthat package
library(new.dist) # load our package
devtools::test()
rm(list = c("pcdata"))
devtools::test()
devtools::test_coverage()
install.packages("censorData")
devtools::test_coverage()
library(usethis)
use_git_config(user.name = "coskunkus", user.email = "coskunkus@gmail.com")
library(covr)
covr::codecov(token ="codecov: 4a5d73d0-6ca9-4860-a2d7-2d1f823b485f")
covr::codecov(token ="codecov:4a5d73d0-6ca9-4860-a2d7-2d1f823b485f")
git status
covr::codecov(token ="codecov:4a5d73d0-6ca9-4860-a2d7-2d1f823b485f")
covr::codecov(token ="codecov:4a5d73d0-6ca9-4860-a2d7-2d1f823b485f")
use_git_config(user.name = "coskunkus", user.email = "coskunkus@gmail.com")
covr::codecov(token ="codecov:4a5d73d0-6ca9-4860-a2d7-2d1f823b485f")
